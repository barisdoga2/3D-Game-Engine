#version 400 core

in vec2 position;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;
uniform float waterTilingFactor;
uniform vec3 cameraPosition;
uniform vec3 lightPosition;

out vec4 clipSpace;
out vec2 textureCoords;
out vec3 toCameraVector;
out vec3 fromLightVector;
out float visiblityOfPixelCausedByFog;


void main(void) {

	vec4 worldPosition = modelMatrix * vec4(position.x, 0.0, position.y, 1.0);

	clipSpace = projectionMatrix * viewMatrix * worldPosition;
	gl_Position = clipSpace;

	textureCoords = vec2(position.x / 2.0 + 0.5, position.y / 2.0 + 0.5) * waterTilingFactor;
	toCameraVector = cameraPosition - worldPosition.xyz;
	fromLightVector = worldPosition.xyz - lightPosition;

	float distance = length((viewMatrix * worldPosition).xyz);
	visiblityOfPixelCausedByFog = exp(-pow(distance * densityOfFog, fogGradient));

}
